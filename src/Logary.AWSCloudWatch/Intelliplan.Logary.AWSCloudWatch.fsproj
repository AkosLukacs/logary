<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>27393b12-9f93-4078-a33d-faadd00bd3eb</ProjectGuid>
    <OutputType>Library</OutputType>
    <RootNamespace>Logary.AWSCloudWatch</RootNamespace>
    <AssemblyName>Logary.AWSCloudWatch</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <Name>Intelliplan.Logary.AWSCloudWatch</Name>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <Tailcalls>false</Tailcalls>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <WarningLevel>3</WarningLevel>
    <DocumentationFile>bin\Debug\Logary.AWSCloudWatch.xml</DocumentationFile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <Tailcalls>true</Tailcalls>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <WarningLevel>3</WarningLevel>
    <DocumentationFile>bin\Release\Logary.AWSCloudWatch.xml</DocumentationFile>
  </PropertyGroup>
  <PropertyGroup>
    <MinimumVisualStudioVersion Condition="'$(MinimumVisualStudioVersion)' == ''">11</MinimumVisualStudioVersion>
  </PropertyGroup>
  <Import Project="$(MSBuildExtensionsPath32)\..\Microsoft SDKs\F#\3.0\Framework\v4.0\Microsoft.FSharp.Targets" Condition=" Exists('$(MSBuildExtensionsPath32)\..\Microsoft SDKs\F#\3.0\Framework\v4.0\Microsoft.FSharp.Targets')" />
  <ItemGroup>
    <Compile Include="Targets_AWSCloudWatch.fs" />
    <None Include="packages.config" />
  </ItemGroup>
  <ItemGroup>
    <Reference Include="AWSSDK">
      <HintPath>..\packages\AWSSDK.2.3.0.0\lib\net35\AWSSDK.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="FSharp.Core">
      <HintPath>..\packages\FSharp.Core.3.0.0.2\lib\net40\FSharp.Core.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="mscorlib" />
    <Reference Include="NodaTime">
      <HintPath>..\packages\NodaTime.1.3.0\lib\net35-Client\NodaTime.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="policy.2.3.FSharp.Core">
      <HintPath>..\packages\FSharp.Core.3.0.0.2\lib\net40\policy.2.3.FSharp.Core.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Numerics" />
    <ProjectReference Include="..\FSharp.Actor-logary\src\FSharp.Actor\FSharp.Actor-logary.fsproj">
      <Name>FSharp.Actor-logary</Name>
      <Project>{aa4bc25b-04f7-4b39-bf28-0b0058193ed9}</Project>
    </ProjectReference>
    <ProjectReference Include="..\Logary\Intelliplan.Logary.fsproj">
      <Name>Intelliplan.Logary</Name>
      <Project>{f7e5b6e8-5d55-4974-9ca7-4c94d810631f}</Project>
      <Private>True</Private>
    </ProjectReference>
  </ItemGroup>
  <PropertyGroup>
    <!-- This will give us the opportunity to sign Logary -->
    <PostBuildEvent Condition=" '$(SignAssemblyPfx)' != '' And '$(SignAssemblyPassword)' != '' And '$(OS)' != 'Unix' ">
      "$(ProjectPath)..\tools\signtool.exe" sign /f "$(SignAssemblyPfx)" /p "$(SignAssemblyPassword)" /t http://timestamp.verisign.com/scripts/timstamp.dll /du "https://github.com/logary/logary" "$(TargetPath)"
    </PostBuildEvent>
    <!-- see https://developer.mozilla.org/en/docs/Signing_an_executable_with_Authenticode -->
    <PostBuildEvent Condition=" '$(SignAssemblySPC)' != '' And '$(SignAssemblyPVK)' != '' And '$(OS)' == 'Unix' ">
      signcode \
       -spc "$(SignAssemblySPC)" \
       -v "$(SignAssemblyPVK)" \
       -a sha2 -$ commercial \
       -n "$(Name)" \
       -i https://www.github.com/logary/logary \
       -t http://timestamp.verisign.com/scripts/timstamp.dll \
       -tr 10 \
       "$(TargetPath)"
    </PostBuildEvent>
  </PropertyGroup>
</Project>